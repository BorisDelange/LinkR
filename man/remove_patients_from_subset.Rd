% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_data_management.R
\name{remove_patients_from_subset}
\alias{remove_patients_from_subset}
\title{Remove Entries from a Subset}
\usage{
remove_patients_from_subset(patients = tibble::tibble(), subset_id = integer())
}
\arguments{
\item{patients}{Either:
- A numeric vector of `person_id`s  
- A data.frame or tibble with any combination of the following columns:
  - `person_id`: required for all cases  
  - `visit_occurrence_id`: optional, must be used with `person_id`  
  - `visit_detail_id`: optional, must be used with `visit_occurrence_id`}

\item{subset_id}{An integer representing the ID of the subset to which patients will be added.
If not provided and the current page is `"subsets"`, it is inferred from currently selected subset.  
The value must be a positive integer.}
}
\value{
A character string indicating the outcome of the operation.  
Returns a message with the number of patients, visits, and unit stays removed, or an error message if inputs are invalid.
}
\description{
Removes patients, hospital stays, or unit stays from a specific subset in the `subset_persons` table.  
Removal is **hierarchical**: 
- Removing a `person_id` also removes associated visits and unit stays.  
- Removing a `visit_occurrence_id` removes the visit and any associated unit stays.  
- Removing a `visit_detail_id` only removes the specific unit stay.
}
\details{
Supported usage scenarios:
1. **By `person_id` only**: removes all associated visits and unit stays  
2. **By `visit_occurrence_id`**: removes specific hospital stays and their units  
3. **By `visit_detail_id`**: removes only specific unit stays  

The function also:
- Validates that `subset_id` is a positive integer  
- Verifies that visit-related columns are used in a consistent hierarchy  
- Ignores duplicate input rows
}
\examples{
\dontrun{
# Remove by person_id only
patients <- tibble::tibble(person_id = c(123, 456))
remove_patients_from_subset(patients = patients, subset_id = 1)

# Remove by person_id + visit_occurrence_id
patients <- tibble::tibble(
  person_id = c(123, 456),
  visit_occurrence_id = c(1001, 1002)
)
remove_patients_from_subset(patients = patients, subset_id = 2)

# Remove by person_id + visit_occurrence_id + visit_detail_id
patients <- tibble::tibble(
  person_id = c(123, 456),
  visit_occurrence_id = c(1001, 1002),
  visit_detail_id = c(2001, 2002)
)
remove_patients_from_subset(patients = patients, subset_id = 3)

# In a Shiny session where the subset is already selected in the UI:
patients <- tibble::tibble(person_id = c(789))
remove_patients_from_subset(patients = patients)  # subset_id is inferred
}

}
