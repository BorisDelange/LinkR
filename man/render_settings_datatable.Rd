% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_settings_server.R
\name{render_settings_datatable}
\alias{render_settings_datatable}
\title{Render management datatable}
\usage{
render_settings_datatable(
  output,
  r = shiny::reactiveValues(),
  ns = shiny::NS(),
  language = "EN",
  id = character(),
  output_name = character(),
  col_names = character(),
  table = character(),
  dropdowns = character(),
  action_buttons = character(),
  datatable_dom = "<'datatable_length'l><'top'ft><'bottom'p>",
  page_length = 10,
  start = 1,
  editable_cols = character(),
  sortable_cols = character(),
  centered_cols = character(),
  searchable_cols = character(),
  filter = FALSE,
  factorize_cols = character(),
  column_widths = character()
)
}
\arguments{
\item{output}{variable from Shiny, used to render messages on the message bar}

\item{r}{The "petit r" object, used to communicate between modules in the ShinyApp (reactiveValues object)}

\item{ns}{Shiny namespace}

\item{language}{Language used (charater)}

\item{id}{ID of the current page, format = "settings_[PAGE]" (character)}

\item{output_name}{Name of the datatable output}

\item{col_names}{A character vector containing colnames, already translated (character)}

\item{table}{Name of a table of database (character)}

\item{dropdowns}{Character vector with names of the dropdowns available in the datatable (character)}

\item{action_buttons}{Character vector with action_buttons needed (character)}

\item{datatable_dom}{Character containing DOM code for the datatable (character)}

\item{page_length}{Page length of the datatable, default to 10 rows (integer)}

\item{start}{Which page display (used when we save datatable state), default to 1 (integer)}

\item{editable_cols}{Which cols are editable (character vector)}

\item{sortable_cols}{Which cols are sortable (character vector)}

\item{centered_cols}{Which cols are centered (character vector)}

\item{searchable_cols}{If filter is TRUE, choose which columns are searchable (character)}

\item{filter}{If TRUE, we can filter we search box each column (logical)}

\item{column_widths}{Columns widths (named character vector)}
}
\description{
Renders a datatable (from library DT)
}
\details{
NB : don't forget Action column in the col_names argument.\cr\cr
For more informations about DT, see https://datatables.net/manual/options.\cr
See DOM documentation here : https://datatables.net/reference/option/dom\cr
See columnDefs doc here : https://datatables.net/reference/option/columnDefs
}
\examples{
\dontrun{
data <- tibble::tribble(~id, ~name, ~description, ~data_source_id,
  2, "Name of the datamart", "Description of the datamart", 3)
  

col_names <- c("ID", "Name", "Description", "Data source ID", "Action")
action_buttons <- c("delete", "edit_code")
editable_cols <- c("id", "name")
sortable_cols <- "id"
centered_cols <- "id"
filter <- TRUE
searchable_cols <- c("name", "description")
column_widths <- c("name" = "200px", "description" = "300px")

render_settings_datatable(
  output = output, r = r, 
  ns = NS("settings_datamart"), language = "EN",
  id = "settings_datamart",
  output_name = "management_datatable"
  col_names = col_names, 
  table = "datamarts", 
  dropdowns = "data_source",
  action_buttons = action_buttons, 
  datatable_dom = "<'top'ft>",
  page_length = 20, 
  start = 1, 
  editable_cols = editable_cols, 
  sortable_cols = sortable_cols,
  centered_cols = centered_cols, 
  filter = filter,
  searchable_cols = searchable_cols,
  column_widths = column_widths)
}
}
